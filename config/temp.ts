docs: {
  path: 'docs' /*文件系统上文档内容目录的路径，相对于站点目录。*/,
  breadcrumbs: true /*启用或禁用文档页面上的面包屑。*/,
  /*用于编辑站点的基本 URL。最终 URL 由 editUrl + relativeDocPath 计算。
    使用函数可以对每个文件进行更细致的控制。完全省略此变量将禁用编辑链接。*/
  /*      editUrl:undefined , 
    Simple use-case: string editUrl*/
  /*editUrl: 'https://github.com/facebook/docusaurus/edit/main/website/',*/
  /*Advanced use-case: functional editUrl */
  editUrl: ({ versionDocsDirPath, docPath }) =>
    `https://github.com/facebook/docusaurus/edit/main/website/${versionDocsDirPath}/${docPath}`,
  editLocalizedFiles: false /*编辑 URL 将定位本地化文件，而不是原始的未本地化文件。当 editUrl 是函数时被忽略。*/,
  editCurrentVersion: false /*编辑 URL 将始终针对当前版本文档而不是旧版本。当 editUrl 是函数时被忽略。*/,
  routeBasePath: 'docs' /*你网站的文档部分的 URL 路由。不要包含尾部斜杠。使用 / 发送没有基本路径的文档。*/,
  tagsBasePath: 'tags' /*你网站的标签列表页面的 URL 路由。它位于 routeBasePath 之前。*/,
  // include: ['**/*.md', '**/*.mdx'], /*与要构建的 Markdown 文件相匹配的 glob 模式数组，相对于内容路径。*/
  // exclude: ['**/_*.{js,jsx,ts,tsx,md,mdx}', '**/_*/**', '**/*.test.{js,jsx,ts,tsx}', '**/__tests__/**'], /*与要排除的 Markdown 文件匹配的 glob 模式数组。用作基于 include 选项的细化。*/
  include: ['**/*.md', '**/*.mdx'], // 包含哪些文件
  exclude: ['**/_*.{js,jsx,ts,tsx,md,mdx}', '**/_*/**', '**/*.test.{js,jsx,ts,tsx}', '**/__tests__/**'], // 排除哪些文件
  sidebarPath:
    'sidebars.ts' /*侧边栏配置的路径。  指定侧边栏配置文件的位置。 使用 false 禁用侧边栏，或使用 undefined 创建完全自动生成的侧边栏。*/,
  sidebarCollapsible: true /*侧边栏类别默认情况下是否可折叠。另见 可折叠类别*/,
  sidebarCollapsed: true /*侧边栏类别是否默认折叠。另见 默认扩展类别*/,
  /*用于将 'autogenerated' 类型的侧边栏项目替换为真实侧边栏项目（文档、类别、链接...）的函数。另见 自定义侧边栏项目生成器*/
  /* async sidebarItemsGenerator({
defaultSidebarItemsGenerator,
numberPrefixParser,
item,
version,
docs,
isCategoryIndex,
}) {
// Use the provided data to generate a custom sidebar slice
// 使用提供的数据生成自定义侧栏切片
return [
  {type: 'doc', id: 'intro'},
  {
    type: 'category',
    label: 'Tutorials',
    items: [
      {type: 'doc', id: 'tutorial1'},
      {type: 'doc', id: 'tutorial2'},
    ],
  },
];
}, */

  /*自定义解析逻辑从文件名中提取数字前缀。使用 false 禁用此行为并保持文档不变，使用 true 使用默认解析器。另见 使用数字前缀*/
  /* numberPrefixParser(filename) {
// Implement your own logic to extract a potential number prefix
// 实现您自己的逻辑来提取潜在的数字前缀
const numberPrefix = findNumberPrefix(filename);
// Prefix found: return it with the cleaned filename
if (numberPrefix) {
  return {
    numberPrefix,
    filename: filename.replace(prefix, ''),
  };
}
// No number prefix found
return {numberPrefix: undefined, filename};
}, */

  docsRootComponent:
    '@theme/DocsRoot' /*所有文档插件页面（包括所有版本）的父组件。在文档页面和版本之间导航时保持安装状态。*/,
  docVersionRootComponent:
    '@theme/DocVersionRoot' /*单个版本的所有文档页面的父组件（带有侧边栏的文档页面、标签页面）。在该特定版本的页面之间导航时保持安装状态。*/,
  docRootComponent:
    '@theme/DocRoot' /*所有带有侧边栏的文档页面的父组件（常规文档页面、类别生成的索引页面）。在此类页面之间导航时保持安装状态。*/,
  docItemComponent: '@theme/DocItem' /*主文档容器，包含目录、分页等。*/,
  docTagsListComponent: '@theme/DocTagsListPage' /*标签列表页面的根组件*/,
  docTagDocListComponent: '@theme/DocTagDocListPage' /*	"包含标签 X 的文档" 页面的根组件。*/,
  docCategoryGeneratedIndexComponent: '@theme/DocCategoryGeneratedIndexPage' /*生成的类别索引页的根组件。*/,
  // remarkPlugins: [require('./my-remark-plugin')],
  remarkPlugins: [] /* 额外的 Remark 插件 备注传递给 MDX 的插件。*/,
  rehypePlugins: [] /* 额外的 Rehype 插件,Rehype 插件传递给 MDX。*/,
  beforeDefaultRemarkPlugins: [] /*自定义 Remark 插件在默认 Docusaurus Remark 插件之前传递到 MDX。*/,
  beforeDefaultRehypePlugins: [] /*自定义 Rehype 插件在默认 Docusaurus Rehype 插件之前传递到 MDX。*/,
  showLastUpdateAuthor: true /*是否显示最后更新文档的作者。*/,
  showLastUpdateTime: true /*是否显示文档的最后更新日期。这需要在构建期间访问 git 历史记录，因此无法与浅克隆（CI 系统的常见默认设置）一起正常工作。使用 GitHub actions/checkout，使用 fetch-depth: 0。*/,
  disableVersioning: false /*即使存在多个版本，也应显式禁用版本控制。这将使该网站仅包含当前版本。如果 includeCurrentVersion: false 和 disableVersioning: true 将会出错。*/,
  includeCurrentVersion: true /*包括文档的当前版本。*/,
  lastVersion: undefined /*文档导航栏项目优先导航到并默认显示的版本。*/,
  tags: 'tags.yml' /*列出预定义标签的 YAML 文件的路径。相对于文档版本内容目录。string | false | null | undefined	*/,
  onInlineTags:
    'warn' /*当文档包含内联标签（未出现在预定义标签列表中，通常为 docs/tags.yml）时的插件行为。'ignore' | 'log' | 'warn' | 'throw'	*/,
  /* onlyIncludeVersions: ['current', '1.0.0', '2.0.0'],*/ /*仅包含所有可用版本的子集。*/
  /*独立定制每个版本的属性。*/
  /* versions: {
current: {
  label: 'Android SDK v2.0.0 (WIP)',
  path: 'android-2.0.0',
  banner: 'none',
},
'1.0.0': {
  label: 'Android SDK v1.0.0',
  path: 'android-1.0.0',
  banner: 'unmaintained',
},
}, */
  //docLayoutComponent: '@theme/DocPage', // 自定义文档页面布局组件
},